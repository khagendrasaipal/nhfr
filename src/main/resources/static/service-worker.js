!function(){"use strict";const e=["client/_commonjsHelpers.fffabd3b.js","client/js.cookie.7f372dc7.js","client/index.02e345fc.js","client/fetchdata.afb1a114.js","client/client.27083f71.js","client/index.e5c655c7.js","client/create.bcc8dfec.js","client/index.9bb96efd.js","client/module.9872e2eb.js","client/health_registry_list_online.40c8c9b3.js","client/health_facility_type.869c3ca8.js","client/app.b28bbc30.js","client/health_facility_level.570071a2.js","client/ServiceItemView.05649f0e.js","client/ServiceItem.0a0038f0.js","client/loadLeaflet.78c5bdfd.js","client/index.405b8c18.js","client/health_registry_list.b3558c3f.js","client/MultiSelect.e42e73c3.js","client/api.821fcd38.js","client/admin_login.e438cd09.js","client/apiloginsubmitpage.38968a7a.js","client/healthservice.195e0443.js","client/servicetype.ea697c18.js","client/LocalLevel.6701dfc9.js","client/specialized.955fc896.js","client/hfservices.11aa348b.js","client/laboratory.de6021c5.js","client/motherhood.dd061ff0.js","client/onlineview.229118b5.js","client/apiSignup.8c103b84.js","client/health_registry.da8f914e.js","client/jquery.dc1d5bd8.js","client/googlemap.e3e49700.js","client/apiLogin.9d443e33.js","client/userSignup.1144a9e1.js","client/services.dcc8fbcd.js","client/tracking.54c7022c.js","client/ownership.1d3debce.js","client/radiology.14af8077.js","client/surgical.1fa300fb.js","client/apiList.72f36531.js","client/ayurved.f96843c2.js","client/userList.7c5471e4.js","client/bipanna.6ca7c104.js","client/apiLog.9d4b2d14.js","client/family.bbbbba65.js","client/login.ada4278b.js","client/index.f1c34726.js","client/[slug].bd755888.js","client/home.a9a87a97.js","client/opd.d52be811.js","client/search.28e79308.js","client/applyonline.b57f2b3f.js","client/reports.50ec7b88.js","client/Sidebar.6f38f003.js"].concat(["service-worker-index.html","document.png","favicon.png","fetchdata.svelte","flag-anim.gif","folder-horizontal.png","global.css","great-success.png","jquery.treeview/changelog.txt","jquery.treeview/demo/async.html","jquery.treeview/demo/bg.gif","jquery.treeview/demo/demo.js","jquery.treeview/demo/images.html","jquery.treeview/demo/index.html","jquery.treeview/demo/large.html","jquery.treeview/demo/prerendered.html","jquery.treeview/demo/screen.css","jquery.treeview/demo/simple.html","jquery.treeview/demo/source.php","jquery.treeview/demo/source.phps","jquery.treeview/images/file.gif","jquery.treeview/images/folder-closed.gif","jquery.treeview/images/folder.gif","jquery.treeview/images/minus.gif","jquery.treeview/images/plus.gif","jquery.treeview/images/treeview-black-line.gif","jquery.treeview/images/treeview-black.gif","jquery.treeview/images/treeview-default-line.gif","jquery.treeview/images/treeview-default.gif","jquery.treeview/images/treeview-famfamfam-line.gif","jquery.treeview/images/treeview-famfamfam.gif","jquery.treeview/images/treeview-gray-line.gif","jquery.treeview/images/treeview-gray.gif","jquery.treeview/images/treeview-red-line.gif","jquery.treeview/images/treeview-red.gif","jquery.treeview/jquery.treeview.async.js","jquery.treeview/jquery.treeview.css","jquery.treeview/jquery.treeview.js","jquery.treeview/jquery.treeview.min.js","jquery.treeview/jquery.treeview.pack.js","jquery.treeview/lib/jquery.cookie.js","jquery.treeview/todo","logo-192.png","logo-512.png","manifest.json","nepal-govt.png","nepali.datepicker.v3.7.min.js","nepdate.css","nepdate.js","toggle-small-expand.png","toggle-small.png"]),i=new Set(e);self.addEventListener("install",i=>{i.waitUntil(caches.open("cache1736248865322").then(i=>i.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const i of e)"cache1736248865322"!==i&&await caches.delete(i);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const t=new URL(e.request.url);t.protocol.startsWith("http")&&(t.hostname===self.location.hostname&&t.port!==self.location.port||(t.host===self.location.host&&i.has(t.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1736248865322").then(async i=>{try{const t=await fetch(e.request);return i.put(e.request,t.clone()),t}catch(t){const s=await i.match(e.request);if(s)return s;throw t}}))))})}();
